name: CI/CD Pipeline

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/wisecow-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        id: aws-creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Create kubeconfig
        run: |
          echo ${HOME}
          mkdir -p ${HOME}/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > ${HOME}/.kube/config
          ls -l ${HOME}/.kube/
          cat ${HOME}/.kube/config

      # - name: Print AWS Configuration
      #   run: aws sts get-caller-identity

      # - name: Print Kubeconfig
      #   run: cat ${HOME}/.kube/config

      # - name: Print Cluster Info
      #   run: kubectl cluster-info

      # - name: Test API Server Connectivity
      #   run: curl -v $(kubectl config view --minify -o jsonpath='{.clusters[0].cluster.server}')

      - name: Deploy to Kubernetes
        run: |
          kubectl start apiserver
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml 
        env:
          KUBECONFIG: ${HOME}/.kube/config
